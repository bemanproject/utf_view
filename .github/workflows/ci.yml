name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  gcc14-linux-preset:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bemanproject/infra-containers-gcc:14.3.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        run: |
          cmake --workflow --preset gcc-debug
  gcc15-linux-preset:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bemanproject/infra-containers-gcc:14.3.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        run: |
          cmake --workflow --preset gcc-debug
  gcc15-linux-coverage-and-paper:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bemanproject/infra-containers-gcc:15.1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        run: |
          cmake -GNinja -B build -S . -DCMAKE_CXX_STANDARD=23 -DCMAKE_TOOLCHAIN_FILE=cmake/gnu-toolchain.cmake -DBEMAN_UTF_VIEW_BUILD_PAPER=ON -DCMAKE_CXX_FLAGS="-coverage"
          cmake --build build --config Debug --parallel
          ctest --test-dir build --build-config Debug
        env:
          CMAKE_GENERATOR: "Ninja Multi-Config"
      - name: Coverage
        run: |
          emerge-webrsync
          emerge dev-util/lcov
          lcov --directory ./build --capture --output-file ./build/coverage_all.info
          lcov --remove ./build/coverage_all.info -o ./build/coverage.info '/usr/*' "$PWD/tests/beman/utf_view/*" "$PWD/build/_deps/*"
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: ${{runner.workspace}}/utf_view/build/coverage.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
  clang-19-linux-libcpp:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bemanproject/infra-containers-clang:19.1.7
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        run: |
          cmake --workflow --preset llvm-19-libc++-debug
  clang-20-linux-libcpp:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bemanproject/infra-containers-clang:20.1.7
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        run: |
          cmake --workflow --preset llvm-libc++-debug
  msvc-windows:
    runs-on: windows-latest
    steps:
      - name: Setup build environment
        uses: lukka/get-cmake@latest
        with:
          ninjaVersion: "latest"
      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run
        shell: bash
        run: |
          cmake --workflow --preset msvc-debug
